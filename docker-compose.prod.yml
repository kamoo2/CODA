services:
  mqtt:
    image: eclipse-mosquitto
    container_name: mqtt-broker
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./infra/mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
    restart: unless-stopped
    networks:
      - app-network

  rerun-viewer:
    build:
      context: ./infra/rerun
    container_name: rerun-viewer
    ports:
      - "9090:9090"
    volumes:
      - ./infra/rerun/entrypoint.sh:/rerun/entrypoint.sh:ro
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx-server
    ports:
      - "80:80"
    volumes:
      - ./infra/nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - /mnt/coda/rrd:/data/rrd:ro
      - /mnt/coda/dbc:/data/dbc:ro
      - /mnt/coda/curation:/data/curation:ro
    depends_on:
      - mqtt
      - rerun-viewer
    restart: unless-stopped
    networks:
      - app-network
      
  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: dcatdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
      
  backend:
    build:
      context: ./backend
    container_name: backend-server
    ports:
      - "8080:8080"
    environment:
      - AES_MASTER_KEY=${AES_MASTER_KEY}
      - JWT_ACCESS_TOKEN_EXPIRATION=${JWT_ACCESS_TOKEN_EXPIRATION}
      - JWT_REFRESH_TOKEN_EXPIRATION=${JWT_REFRESH_TOKEN_EXPIRATION}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    volumes:         
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/coda/dbc:/mnt/coda/dbc
      - /mnt/coda/rrd:/mnt/coda/rrd
      - /mnt/coda/curation:/mnt/coda/curation
    depends_on:
      - postgres
      - mqtt
      - rerun-viewer
      - nginx
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    name: coda-network
    driver: bridge
    
volumes:
  pgdata:
